version: "3.9"
services:
  client-lite:
    build:
      context: ./client
      dockerfile: lite.Dockerfile
      args:
        # REACT_APP_API_URL=http://server:5000/, where name server - service, 5000 - inner port
        # #add ".env" file DockerFile before build process. After build env cannot edit
        # See config
        - PATH_ENV=./.env
    container_name: CLIENT_KERIL_LITE
    networks:
      - network_lite
    links:
      - server
    depends_on:
      - server
    ports:
      - 5001:80
    volumes:
      - ./client/config/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - html-lite:/usr/share/nginx/html
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: SERVER_KERIL_LITE
    networks:
      - network_lite
    environment:
      - PORT=5000
      - DB_NAME=db-store
      - DB_USER=postgres
      - DB_PASSWORD=2308
      - DB_HOST=postgres
      - DB_PORT=5432
      - SECRET_KEY=hfk5odkk4l5fkl4
    ports:
      - 5002:5000
    volumes:
      - server:/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:14
    container_name: DB_KERIL_LITE
    networks:
      - network_lite
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "db-store", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=2308
      - POSTGRES_DB=db-store
    volumes:
      - ./server/db/init:/docker-entrypoint-initdb.d
      - postgres:/var/lib/postgresql/data
    ports:
      - 5433:5432
  client-lite-node:
    build:
      context: ./client
      dockerfile: ./node_lite.Dockerfile
    container_name: CLIENT_NODE_KERIL_LITE
    networks:
      - network_lite
    links:
      - server
    depends_on:
      - server
    environment:
      - REACT_APP_API_URL=http://localhost:5002/
      - REACT_APP_FOO=123_NODE
    ports:
      - 5006:3000
    volumes:
      - client-node-modules:/usr/src/app/node_modules
networks:
  network_lite:
volumes:
  postgres:
  server:
  client-node-modules:
  html-lite:
